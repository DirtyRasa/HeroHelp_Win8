<common:LayoutAwarePage
    x:Name="pageRoot"
    x:Class="HeroHelper.HeroSplitPage"
    DataContext="{Binding DefaultViewModel, RelativeSource={RelativeSource Self}}"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:HeroHelper.Controls"
    xmlns:common="using:HeroHelper.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Page.Resources>

        <!-- Collection of items displayed by this page -->
        <CollectionViewSource
            x:Name="itemsViewSource"
            Source="{Binding Heroes}"/>

        <CollectionViewSource
            x:Name="compareStatsItemsViewSource"/>
        
    </Page.Resources>
    <common:LayoutAwarePage.BottomAppBar>
        <AppBar>
            <Grid>
                <Button x:Name="RefreshHeroButton"
                        HorizontalAlignment="Right"
                        Style="{StaticResource ResyncAppBarButtonStyle}" Click="RefreshHeroButton_Click"/>
            </Grid>
        </AppBar>
    </common:LayoutAwarePage.BottomAppBar>

    <!--
        This grid acts as a root panel for the page that defines two rows:
        * Row 0 contains the back button and page title
        * Row 1 contains the rest of the page layout
    -->
    <Grid Style="{StaticResource LayoutRootStyle}">
        <Grid.RowDefinitions>
            <RowDefinition Height="140"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition x:Name="primaryColumn" Width="350"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>

        <!-- Back button and page title -->
        <Grid x:Name="titlePanel" Grid.ColumnSpan="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Button
                x:Name="backButton"
                Click="GoBack"
                IsEnabled="{Binding DefaultViewModel.CanGoBack, ElementName=pageRoot}"
                Style="{StaticResource BackButtonStyle}"/>
            <StackPanel Grid.Column="1" Margin="0,60,30,40" Orientation="Horizontal">
                <TextBlock x:Name="battleTagTitle" Text="{Binding Group.BattleTag}" Style="{StaticResource PageHeaderTextStyle}" Margin="0"/>
                <TextBlock x:Name="textBlock" Text=" - " Style="{StaticResource PageHeaderTextStyle}" Margin="10,0" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                <TextBlock x:Name="regionTitle" Text="{Binding Group.Region}" Style="{StaticResource PageHeaderTextStyle}" Margin="10,0,0,0"/>
            </StackPanel>
        </Grid>

        <!-- Vertical scrolling item list -->
        <ListView
            x:Name="itemListView"
            AutomationProperties.AutomationId="ItemsListView"
            AutomationProperties.Name="Items"
            TabIndex="1"
            Padding="120,0,0,0"
            ItemsSource="{Binding Source={StaticResource itemsViewSource}}"
            IsSwipeEnabled="False"
            SelectionChanged="ItemListView_SelectionChanged"
            ItemTemplate="{StaticResource HeroItemTemplateCompact}" Grid.Row="1" Margin="-50,0,0,0"/>

        <ScrollViewer x:Name="itemDetail"
        	Grid.Column="1"
        	Grid.RowSpan="1" Grid.Row="1" VerticalScrollMode="Auto" HorizontalScrollMode="Auto" Margin="0,0,0,10">
            <Grid Width="994" Height="1010">
                <Grid x:Name="grid"
        			Width="994" Height="645" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0">
                    <Image x:Name="paperdollImage" Source="{Binding PaperdollPath}" Stretch="None" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                    <Image Source="Assets/inventory-lines.png" Stretch="None" Margin="131,55,-131,-55"/>

                    <Border Margin="389,56,119,515" >
                        <TextBlock
        					VerticalAlignment="Center"
        					HorizontalAlignment="Center" 
        					Text="{Binding Name}"
        					TextAlignment="Center" FontFamily="Palatino Linotype" FontSize="46" Foreground="#FFFFEAD4"/>
                    </Border>
                    <StackPanel Margin="548,41,288,587" Orientation="Horizontal" HorizontalAlignment="Center">
                        <TextBlock
        					HorizontalAlignment="Center"
        					TextWrapping="Wrap"
        					Text="{Binding Level}" VerticalAlignment="Top" Foreground="#FFD4B473" FontSize="14" Margin="0,0,5,0"/>
                        <TextBlock
        					HorizontalAlignment="Center"
        					TextWrapping="Wrap"
        					Text="(" VerticalAlignment="Top" Foreground="#FFA791C2" FontSize="14"/>
                        <TextBlock
        					HorizontalAlignment="Center"
        					TextWrapping="Wrap"
        					Text="{Binding ParagonLevel}" VerticalAlignment="Top" Foreground="#FFA791C2" FontSize="14"/>
                        <TextBlock
        					HorizontalAlignment="Center"
        					TextWrapping="Wrap"
        					Text=")" VerticalAlignment="Top" Foreground="#FFA791C2" FontSize="14" Margin="0,0,5,0"/>
                        <TextBlock
        					HorizontalAlignment="Center"
        					TextWrapping="Wrap"
        					Text="{Binding FriendlyClass}" VerticalAlignment="Top" Foreground="#FFD4B473" FontSize="14"/>

                    </StackPanel>

                    <Grid
        				HorizontalAlignment="Left" Height="490" Margin="265,154,0,0" VerticalAlignment="Top" Width="725">
                        <!-- Item Images -->
                        <Grid Width="305" Height="425"
        					Margin="209,0,0,0"
        					HorizontalAlignment="Left"
        					VerticalAlignment="Top">
                            <local:ItemUserControl x:Name="HeadItemUserControl" DisplayTitle="Head"
        						Margin="121,4,0,0"
        						Height="66" Width="66"
        						HorizontalAlignment="Left"
        						VerticalAlignment="Top"
        						DataContext="{Binding Items[head]}"
                                Key="head"
        						Tapped="ItemUserControl_Tapped"/>
                            <local:ItemUserControl x:Name="TorsoItemUserControl" DisplayTitle="Torso"
        						Margin="113,74,0,0"
        						Height="113" Width="82"
        						HorizontalAlignment="Left"
        						VerticalAlignment="Top"
        						DataContext="{Binding Items[torso]}"
                                Key="torso"
        						Tapped="ItemUserControl_Tapped"/>
                            <local:ItemUserControl x:Name="FeetItemUserControl" DisplayTitle="Feet"
        						Margin="121,0,0,14"
        						Height="88" Width="66"
        						HorizontalAlignment="Left"
        						VerticalAlignment="Bottom"
        						DataContext="{Binding Items[feet]}"
                                Key="feet"
        						Tapped="ItemUserControl_Tapped"/>
                            <local:ItemUserControl x:Name="HandsItemUserControl" DisplayTitle="Hands"
        						Margin="13,127,0,0"
        						Height="88" Width="66"
        						HorizontalAlignment="Left"
        						VerticalAlignment="Top"
        						DataContext="{Binding Items[hands]}"
                                Key="hands"
        						Tapped="ItemUserControl_Tapped"/>
                            <local:ItemUserControl x:Name="ShouldersItemUserControl" DisplayTitle="Shoulders"
        						Margin="39,28,0,0"
        						Height="88" Width="66"
        						HorizontalAlignment="Left"
        						VerticalAlignment="Top"
        						DataContext="{Binding Items[shoulders]}"
                                Key="shoulders"
        						Tapped="ItemUserControl_Tapped"/>
                            <local:ItemUserControl x:Name="LegsItemUserControl" DisplayTitle="Legs"
        						Margin="121,0,0,106"
        						Height="88" Width="66"
        						HorizontalAlignment="Left"
        						VerticalAlignment="Bottom"
        						DataContext="{Binding Items[legs]}"
                                Key="legs"
        						Tapped="ItemUserControl_Tapped"/>
                            <local:ItemUserControl x:Name="BracersItemUserControl" DisplayTitle="Bracers"
        						Margin="0,127,10,0"
        						Height="88" Width="66"
        						HorizontalAlignment="Right"
        						VerticalAlignment="Top"
        						DataContext="{Binding Items[bracers]}"
                                Key="bracers"
        						Tapped="ItemUserControl_Tapped"/>
                            <local:ItemUserControl x:Name="MainHandItemUserControl" DisplayTitle="Main Hand"
        						Margin="13,0,0,13"
        						Height="130" Width="66"
        						HorizontalAlignment="Left"
        						VerticalAlignment="Bottom"
        						DataContext="{Binding Items[mainHand]}"
                                Key="mainHand"
        						Tapped="ItemUserControl_Tapped"/>
                            <local:ItemUserControl x:Name="OffHandItemUserControl" DisplayTitle="Off Hand"
        						Margin="0,0,10,13"
        						Height="130" Width="66"
        						HorizontalAlignment="Right"
        						VerticalAlignment="Bottom"
        						DataContext="{Binding Items[offHand]}"
                                Key="offHand"
        						Tapped="ItemUserControl_Tapped"/>
                            <local:ItemUserControl x:Name="WaistItemUserControl" DisplayTitle="Waist"
        						Margin="113,193,10,0"
        						Height="34" Width="82"
        						HorizontalAlignment="Left"
        						VerticalAlignment="Top"
        						DataContext="{Binding Items[waist]}"
                                Key="waist"
        						Tapped="ItemUserControl_Tapped"/>
                            <local:ItemUserControl x:Name="RightFingerItemUserControl" DisplayTitle="Right Finger"
        						Margin="0,0,22,156"
        						Height="42" Width="42"
        						HorizontalAlignment="Right"
        						VerticalAlignment="Bottom"
        						DataContext="{Binding Items[rightFinger]}"
                                Key="rightFinger"
        						Tapped="ItemUserControl_Tapped"/>
                            <local:ItemUserControl x:Name="LeftFingerItemUserControl" DisplayTitle="Left Finger"
        						Margin="25,0,0,156"
        						Height="42" Width="42"
        						HorizontalAlignment="Left"
        						VerticalAlignment="Bottom"
        						DataContext="{Binding Items[leftFinger]}"
                                Key="leftFinger"
        						Tapped="ItemUserControl_Tapped"/>
                            <local:ItemUserControl x:Name="NeckItemUserControl" DisplayTitle="Neck"
        						Margin="0,48,44,0"
        						Height="56" Width="56"
        						HorizontalAlignment="Right"
        						VerticalAlignment="Top"
        						DataContext="{Binding Items[neck]}"
                                Key="neck"
        						Tapped="ItemUserControl_Tapped"/>
                        </Grid>

                        <TextBlock Style="{StaticResource slot-head}" DataContext="{Binding Items[head]}" Text="{Binding Name}"
        					Foreground="{Binding DisplayColor}" Tapped="ItemNameTextBlock_Tapped"/>
                        <TextBlock Style="{StaticResource slot-neck}" DataContext="{Binding Items[neck]}" Text="{Binding Name}"
        					Foreground="{Binding DisplayColor}" Tapped="ItemNameTextBlock_Tapped"/>
                        <TextBlock Style="{StaticResource slot-bracers}" DataContext="{Binding Items[bracers]}" Text="{Binding Name}"
        					Foreground="{Binding DisplayColor}" Tapped="ItemNameTextBlock_Tapped"/>
                        <TextBlock Style="{StaticResource slot-waist}" DataContext="{Binding Items[waist]}" Text="{Binding Name}"
        					Foreground="{Binding DisplayColor}" Tapped="ItemNameTextBlock_Tapped"/>
                        <TextBlock Style="{StaticResource slot-rightFinger}" DataContext="{Binding Items[rightFinger]}" Text="{Binding Name}"
        					Foreground="{Binding DisplayColor}" Tapped="ItemNameTextBlock_Tapped"/>
                        <TextBlock Style="{StaticResource slot-offHand}" DataContext="{Binding Items[offHand]}" Text="{Binding Name}"
        					Foreground="{Binding DisplayColor}" Tapped="ItemNameTextBlock_Tapped"/>
                        <TextBlock Style="{StaticResource slot-feet}" DataContext="{Binding Items[feet]}" Text="{Binding Name}"
        					Foreground="{Binding DisplayColor}" Tapped="ItemNameTextBlock_Tapped"/>

                        <TextBlock Style="{StaticResource slot-shoulders}" DataContext="{Binding Items[shoulders]}" Text="{Binding Name}"
        					Foreground="{Binding DisplayColor}" Tapped="ItemNameTextBlock_Tapped"/>
                        <TextBlock Style="{StaticResource slot-torso}" DataContext="{Binding Items[torso]}" Text="{Binding Name}"
        					Foreground="{Binding DisplayColor}" Tapped="ItemNameTextBlock_Tapped"/>
                        <TextBlock Style="{StaticResource slot-hands}" DataContext="{Binding Items[hands]}" Text="{Binding Name}"
        					Foreground="{Binding DisplayColor}" Tapped="ItemNameTextBlock_Tapped"/>
                        <TextBlock Style="{StaticResource slot-leftFinger}" DataContext="{Binding Items[leftFinger]}" Text="{Binding Name}"
        					Foreground="{Binding DisplayColor}" Tapped="ItemNameTextBlock_Tapped"/>
                        <TextBlock Style="{StaticResource slot-legs}" DataContext="{Binding Items[legs]}" Text="{Binding Name}"
        					Foreground="{Binding DisplayColor}" Tapped="ItemNameTextBlock_Tapped"/>
                        <TextBlock Style="{StaticResource slot-mainHand}" DataContext="{Binding Items[mainHand]}" Text="{Binding Name}"
        					Foreground="{Binding DisplayColor}" Tapped="ItemNameTextBlock_Tapped"/>
                    </Grid>
                    <Popup x:Name="ItemTooltipPopup" IsLightDismissEnabled="True">
                        <Popup.ChildTransitions>
                            <TransitionCollection>
                                <PopupThemeTransition />
                            </TransitionCollection>
                        </Popup.ChildTransitions>
                        <WebView x:Name="toolTip"
        				    HorizontalAlignment="Left" 
        				    Height="350"
        				    Margin="50,50,0,0"
        				    VerticalAlignment="Top" 
        				    Width="354"
        				    LoadCompleted="toolTip_LoadCompleted"/>
                    </Popup>
                    <Popup x:Name="ItemComparePopup" IsLightDismissEnabled="True">
                        <Popup.ChildTransitions>
                            <TransitionCollection>
                                <PaneThemeTransition />
                            </TransitionCollection>
                        </Popup.ChildTransitions>
                        <local:ItemCompareUserControl x:Name="ItemCompareUC" EquipButtonTapped="ItemCompareUC_EquipButtonTapped" />
                    </Popup>
                </Grid>

                <Grid Height="698" Margin="0,645,0,1">
                    <Image HorizontalAlignment="Left" VerticalAlignment="Top" Source="Assets/lower-bg.jpg"/>
                    <Border HorizontalAlignment="Left" Height="540" VerticalAlignment="Top" Width="409" Margin="25,56,0,-496" Background="#AA000000" Visibility="Collapsed">
                        <StackPanel>
                            <TextBlock TextWrapping="Wrap" Text="Stats" HorizontalAlignment="Center" Margin="0,10" FontFamily="Palatino Linotype" FontSize="16"/>
                            <StackPanel VerticalAlignment="Top" Margin="10,0" Orientation="Horizontal">
                                <TextBlock Style="{StaticResource TitleTextStyle}" TextWrapping="NoWrap" Margin="0,0,0,20" Text="Name" Width="150"/>
                                <TextBlock Style="{StaticResource TitleTextStyle}" TextWrapping="Wrap" Text="Before" Width="75"/>
                                <TextBlock Style="{StaticResource TitleTextStyle}" TextWrapping="Wrap" Text="After" Width="75"/>
                                <TextBlock Style="{StaticResource TitleTextStyle}" TextWrapping="Wrap" Text="Difference" Width="75" Foreground="{Binding DifferenceColor}"/>
                            </StackPanel>
                            <ListView
                				x:Name="CompareStatsListView"
                				Height="418"
                				ItemTemplate="{StaticResource StatItemTemplate}"
                				IsTapEnabled="False" SelectionMode="None"/>
                        </StackPanel>
                    </Border>
                    <Border BorderThickness="0,0,0,2" BorderBrush="#312A1E" Margin="450,56,55,612" Height="30">
                        <TextBlock HorizontalAlignment="Left"
                               TextWrapping="Wrap"
                               Text="SKILLS" VerticalAlignment="Top"
                               FontFamily="Palatino Linotype"
                               FontSize="16"/>
                    </Border>
                    <Grid x:Name="ActiveSkillsGrid" Margin="455,91,55,403">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <local:SkillUserControl DataContext="{Binding Skills.Active[0]}" />
                        <local:SkillUserControl Grid.Column="1"
                                                DataContext="{Binding Skills.Active[1]}"/>
                        <local:SkillUserControl Grid.Row="1"
                                                DataContext="{Binding Skills.Active[2]}"/>
                        <local:SkillUserControl Grid.Row="1" Grid.Column="1"
                                                DataContext="{Binding Skills.Active[3]}" />
                        <local:SkillUserControl Grid.Row="2"
                                                DataContext="{Binding Skills.Active[4]}" />
                        <local:SkillUserControl Grid.Row="2" Grid.Column="1"
                                                DataContext="{Binding Skills.Active[5]}" />
                    </Grid>
                    <Border BorderThickness="0,0,0,2" BorderBrush="#312A1E" Margin="455,265,50,403" Height="30" />
                    <Grid x:Name="PassiveSkills" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="464,305,0,0">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                            <local:PassiveUserControl DataContext="{Binding Skills.Passive[0]}" />
                            <local:PassiveUserControl DataContext="{Binding Skills.Passive[1]}" />
                            <local:PassiveUserControl DataContext="{Binding Skills.Passive[2]}" />
                        </StackPanel>
                    </Grid>
                </Grid>
                <StackPanel Margin="10,154,684,10">
                	<Border BorderBrush="Black" BorderThickness="1" Height="50" VerticalAlignment="Top" Background="#CC222222">
                		<StackPanel Orientation="Horizontal" Width="300">
                			<StackPanel Width="150" VerticalAlignment="Center">
                				<TextBlock TextWrapping="Wrap" Text="Damage per Second" HorizontalAlignment="Center"/>
                				<TextBlock x:Name="dpsTextBlock"
                					TextWrapping="Wrap"
                					Foreground="#FFF50000"
                					HorizontalAlignment="Center"
                					FontSize="18"
                					FontWeight="Bold"
                					Text="{Binding CalculatedStats.DPS, Converter={StaticResource NumberConverter}}"/>
                			</StackPanel>
                			<StackPanel Width="150" VerticalAlignment="Center">
                				<TextBlock TextWrapping="Wrap" Text="Effective Hit Points" HorizontalAlignment="Center"/>
                				<TextBlock x:Name="ehpTextBlock"
                					TextWrapping="Wrap"
                					Foreground="#FF55FF00"
                					FontWeight="Bold" FontSize="18"
                					HorizontalAlignment="Center"
                					Text="{Binding CalculatedStats.EHP, Converter={StaticResource NumberConverter}}"/>
                			</StackPanel>
                		</StackPanel>
                	</Border>
                	<StackPanel x:Name="CompareResultsStackPanel" HorizontalAlignment="Left" Height="332" Margin="0,10,0,0" VerticalAlignment="Top" Width="300" Background="#CC222222" Visibility="Collapsed">
                		
                		<StackPanel Orientation="Horizontal" Width="300" Margin="0,10">
                			<StackPanel Width="150" VerticalAlignment="Center">
                				<TextBlock x:Name="dpsChangeTextBlock" TextWrapping="Wrap" Text="910,671.57" HorizontalAlignment="Center" FontSize="18" FontWeight="Bold" Foreground="#FF55FF00"/>
                				<TextBlock TextWrapping="Wrap" Text="DPS Change" HorizontalAlignment="Center"/>
                			</StackPanel>
                			<StackPanel Width="150" VerticalAlignment="Center">
                				<TextBlock x:Name="ehpChangeTextBlock" TextWrapping="Wrap" Text="358,292,.27" FontWeight="Bold" FontSize="18" HorizontalAlignment="Center" Foreground="#FF55FF00"/>
                				<TextBlock TextWrapping="Wrap" Text="EHP Change" HorizontalAlignment="Center"/>
                			</StackPanel>
                		</StackPanel>

                		<StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Height="30" Width="300">
                            <StackPanel.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FF2F0600"/>
                                    <GradientStop Color="#FF1F0400" Offset="1"/>
                                </LinearGradientBrush>
                            </StackPanel.Background>
                            <TextBlock Style="{StaticResource TitleTextStyle}" Text="Stat" Width="80" Margin="5,0,0,0" Foreground="#FFA99877"/>
                            <TextBlock Style="{StaticResource TitleTextStyle}" Text="Diff" Width="75" Foreground="#FFA99877"/>
                            <TextBlock Style="{StaticResource TitleTextStyle}" Text="Before" Width="75" Foreground="#FFA99877"/>
                            <TextBlock Style="{StaticResource TitleTextStyle}" Text="After" Width="75" Foreground="#FFA99877"/>
                		</StackPanel>
                		<ListView
                			x:Name="ChangedStatsListView"
                			ItemTemplate="{StaticResource StatItemTemplate}"
                            ItemsSource="{Binding Source={StaticResource compareStatsItemsViewSource}}"
                			IsTapEnabled="False" SelectionMode="None" Height="240"
                            ItemContainerStyle="{StaticResource StatItemContainerStyle}"/>
                    </StackPanel>
                    
                    <ScrollViewer x:Name="CalculatedStatsScrollViewer" Margin="0,10,0,0" Height="784" HorizontalScrollMode="Disabled" >
                        <StackPanel x:Name="CalculatedStats" Background="#CC222222" Height="900" Width="300" VerticalAlignment="Top">
                            <StackPanel x:Name="BaseStats" Orientation="Vertical" Margin="0,0,0,5">
                                <StackPanel x:Name="BaseStatsTab" Orientation="Horizontal" Tapped="BaseStatsTab_Tapped">
                                    <StackPanel.Background>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FF2F0600"/>
                                            <GradientStop Color="#FF1F0400" Offset="1"/>
                                        </LinearGradientBrush>
                                    </StackPanel.Background>
                                    <TextBlock x:Name="BaseStatTabText" TextWrapping="Wrap" Text="-" FontSize="26.667" VerticalAlignment="Top" HorizontalAlignment="Left" Foreground="#FFA99877" FontWeight="Bold" Margin="5,0,0,0"/>
                                    <TextBlock TextWrapping="Wrap" Text="Base Stats" Margin="25,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="#FFA99877" FontWeight="Bold" FontSize="16"/>
                                </StackPanel>
                                <ListView x:Name="BaseStatDetails"
                					ItemTemplate="{StaticResource CalcStatItemTemplate}"
                					ItemsSource="{Binding CalculatedStats.BaseStats}"
                					ItemContainerStyle="{StaticResource CalcStatListViewItemStyle}"
                					IsTapEnabled="False" SelectionMode="None" Margin="20,0,0,0"/>
                            </StackPanel>
                            <StackPanel x:Name="DamStats" Orientation="Vertical" Margin="0,0,0,5">
                                <StackPanel x:Name="DamStatsTab" Orientation="Horizontal" Tapped="DamStatsTab_Tapped">
                                    <StackPanel.Background>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FF2F0600"/>
                                            <GradientStop Color="#FF1F0400" Offset="1"/>
                                        </LinearGradientBrush>
                                    </StackPanel.Background>
                                    <TextBlock x:Name="DamStatTabText" TextWrapping="Wrap" Text="-" FontSize="26.667" VerticalAlignment="Top" HorizontalAlignment="Left" Foreground="#FFA99877" FontWeight="Bold" Margin="5,0,0,0"/>
                                    <TextBlock TextWrapping="Wrap" Text="Offense" Margin="25,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="#FFA99877" FontWeight="Bold" FontSize="16"/>
                                </StackPanel>
                                <ListView x:Name="DamStatDetails"
                					ItemTemplate="{StaticResource CalcStatItemTemplate}"
                					ItemsSource="{Binding CalculatedStats.DamageStats}"
                					ItemContainerStyle="{StaticResource CalcStatListViewItemStyle}"
                					IsTapEnabled="False" SelectionMode="None" Margin="20,0,0,0"/>
                            </StackPanel>
                            <StackPanel x:Name="DefStats" Orientation="Vertical" Margin="0,0,0,5">
                                <StackPanel x:Name="DefStatsTab" Orientation="Horizontal" Tapped="DefStatsTab_Tapped">
                                    <StackPanel.Background>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FF2F0600"/>
                                            <GradientStop Color="#FF1F0400" Offset="1"/>
                                        </LinearGradientBrush>
                                    </StackPanel.Background>
                                    <TextBlock x:Name="DefStatTabText" TextWrapping="Wrap" Text="+" FontSize="26.667" VerticalAlignment="Top" HorizontalAlignment="Left" Foreground="#FFA99877" FontWeight="Bold" Margin="5,0,0,0"/>
                                    <TextBlock TextWrapping="Wrap" Text="Defense" Margin="25,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="#FFA99877" FontWeight="Bold" FontSize="16"/>
                                </StackPanel>
                                <ListView x:Name="DefStatDetails"
                					ItemTemplate="{StaticResource CalcStatItemTemplate}"
                					ItemsSource="{Binding CalculatedStats.DefenseStats}"
                					ItemContainerStyle="{StaticResource CalcStatListViewItemStyle}"
                					IsTapEnabled="False" SelectionMode="None" Margin="20,0,0,0" Visibility="Collapsed"/>
                            </StackPanel>
                            <StackPanel x:Name="LifeStats" Orientation="Vertical" Margin="0,0,0,5">
                                <StackPanel x:Name="LifeStatsTab" Orientation="Horizontal" Tapped="LifeStatsTab_Tapped">
                                    <StackPanel.Background>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FF2F0600"/>
                                            <GradientStop Color="#FF1F0400" Offset="1"/>
                                        </LinearGradientBrush>
                                    </StackPanel.Background>
                                    <TextBlock x:Name="LifeStatTabText" TextWrapping="Wrap" Text="+" FontSize="26.667" VerticalAlignment="Top" HorizontalAlignment="Left" Foreground="#FFA99877" FontWeight="Bold" Margin="5,0,0,0"/>
                                    <TextBlock TextWrapping="Wrap" Text="Life" Margin="25,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="#FFA99877" FontWeight="Bold" FontSize="16"/>
                                </StackPanel>
                                <ListView x:Name="LifeStatDetails"
                					ItemTemplate="{StaticResource CalcStatItemTemplate}"
                					ItemsSource="{Binding CalculatedStats.LifeStats}"
                					ItemContainerStyle="{StaticResource CalcStatListViewItemStyle}"
                					IsTapEnabled="False" SelectionMode="None" Margin="20,0,0,0" Visibility="Collapsed"/>
                            </StackPanel>
                        </StackPanel>
                    </ScrollViewer>
                </StackPanel>

            </Grid>

        </ScrollViewer>

        <!-- Details for selected item -->

        <VisualStateManager.VisualStateGroups>

            <!-- Visual states reflect the application's view state -->
            <VisualStateGroup x:Name="ApplicationViewStates">
                <VisualState x:Name="FullScreenLandscapeOrWide"/>

                <!-- Filled uses a simpler list format in a narrower column -->
                <VisualState x:Name="FilledOrNarrow">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="primaryColumn" Storyboard.TargetProperty="Width">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="420"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Style" Storyboard.TargetName="itemListView">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HorizontalListView}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Padding" Storyboard.TargetName="itemListView">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="0,0,0,0"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="itemListView">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Thickness>0,0,0,398</Thickness>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.ColumnSpan)" Storyboard.TargetName="itemListView">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <x:Int32>2</x:Int32>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Column)" Storyboard.TargetName="itemDetail">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <x:Int32>0</x:Int32>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.ColumnSpan)" Storyboard.TargetName="itemDetail">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <x:Int32>2</x:Int32>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="grid">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <x:Double>994</x:Double>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="itemDetail">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Thickness>15,235,0,0</Thickness>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>

                <!--
                    The page respects the narrower 100-pixel margin convention for portrait, and the page
                    initially hides details to show only the list of items
                -->
                <VisualState x:Name="FullScreenPortrait">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PortraitBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Style" Storyboard.TargetName="itemListView">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HorizontalListView}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="itemListView" Storyboard.TargetProperty="Padding">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="100,0,90,60"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.RowSpan)" Storyboard.TargetName="itemListView">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <x:Int32>1</x:Int32>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.ColumnSpan)" Storyboard.TargetName="itemListView">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <x:Int32>2</x:Int32>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="itemListView">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Thickness>-50,0,0,894</Thickness>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.ColumnSpan)" Storyboard.TargetName="itemDetail">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <x:Int32>2</x:Int32>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="itemDetail">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <x:Double>NaN</x:Double>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Column)" Storyboard.TargetName="itemDetail">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <x:Int32>0</x:Int32>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="itemDetail">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Thickness>10,333,5,10</Thickness>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="grid">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Thickness>-200,0,0,0</Thickness>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="toolTip">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Thickness>175,0,0,0</Thickness>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>

                <!--
                    When an item is selected in portrait the details display requires more extensive changes:
                     * Hide the master list and the column is was in
                     * Move item details down a row to make room for the title
                     * Move the title directly above the details
                     * Adjust margins and padding for details
                 
                <VisualState x:Name="FullScreenPortrait_Detail">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PortraitBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>

                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="primaryColumn" Storyboard.TargetProperty="Width">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="itemListView" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="itemDetail" Storyboard.TargetProperty="(Grid.Row)">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="itemDetail" Storyboard.TargetProperty="(Grid.RowSpan)">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="titlePanel" Storyboard.TargetProperty="(Grid.Column)">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="itemDetail" Storyboard.TargetProperty="Padding">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="100,0,90,0"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>-->

                <!--
                    The back button and title have different styles when snapped, and the page
                    initially hides details to show only the list of items
                -->
                <VisualState x:Name="Snapped">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="battleTagTitle" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedPageHeaderTextStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="regionTitle" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedPageHeaderTextStyle}"/>
                        </ObjectAnimationUsingKeyFrames>

                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="primaryColumn" Storyboard.TargetProperty="Width">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="320"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="itemDetail" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="itemListView" Storyboard.TargetProperty="Padding">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="20,0,0,0"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="itemListView">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Thickness>-10,0,10,-10</Thickness>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Row)" Storyboard.TargetName="itemListView">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <x:Int32>1</x:Int32>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.RowSpan)" Storyboard.TargetName="itemListView">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <x:Int32>1</x:Int32>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="textBlock">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Collapsed</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="regionTitle">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Collapsed</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>

                <!--
                    When snapped and an item is selected the details display requires more extensive changes:
                     * Hide the master list and the column is was in
                     * Move item details down a row to make room for the title
                     * Move the title directly above the details
                     * Adjust margins and padding for details
                     * Use a different font for title and subtitle
                     * Adjust margins below subtitle
                 -->
                <VisualState x:Name="Snapped_Detail">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="battleTagTitle" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedPageHeaderTextStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="regionTitle" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedPageHeaderTextStyle}"/>
                        </ObjectAnimationUsingKeyFrames>

                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="primaryColumn" Storyboard.TargetProperty="Width">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="320"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="itemDetail" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="itemListView" Storyboard.TargetProperty="Padding">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="20,0,0,0"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="itemListView">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Thickness>-10,0,10,-10</Thickness>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Row)" Storyboard.TargetName="itemListView">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <x:Int32>1</x:Int32>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.RowSpan)" Storyboard.TargetName="itemListView">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <x:Int32>1</x:Int32>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="textBlock">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Collapsed</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="regionTitle">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Collapsed</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</common:LayoutAwarePage>
